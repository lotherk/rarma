<% @methss = [] %>
<% @classes.each do |c| -%>
 <% c.meths.each do |m| -%>
 <%   @methss << m[:name].to_s %>
 <%   next if m[:access] != :static -%>
 <%= c -%>_fnc_<%= m[:name] -%> = {
 <%= ERB.new(load_template("method"), nil, "-",eoutvar='_subm10').result(binding) -%>
 };
 <% end -%>
 <% end -%>
<% @classes.each do |c| -%>
  <%- if c.inherit -%>
CLASS_EXTENDS("<%= c -%>", "<%= c.inherit %>")
<%- elsif c.to_s == "Rarma_Object" -%>
// Mother of objects
CLASS("Rarma_Object")
<%   else -%>
CLASS_EXTENDS("<%= c -%>", "Rarma_Object")
<%   end -%>
<%-%>
<%  c.vars.each do |v| -%>
    PROTECTED VARIABLE("any", "__<%= v[:name] -%>");
<%  end -%>
<%   c.meths.each do |m| -%>
<%   next if m[:access] != :instance -%>
    <%= m[:sig].upcase -%> FUNCTION("<%= m[:type].downcase -%>", "<%= m[:name] -%>") {
<%= ERB.new(load_template("method"), nil, "-",eoutvar='_sub09').result(binding) -%>
    };
    <%- m[:aliases].each do |a| -%>
    /**
     * Alias method for #<%= m[:name] %>
     */
    <%= m[:sig].upcase -%> FUNCTION("<%= m[:type].downcase -%>", "<%= a -%>") { MEMBER("<%= m[:name] -%>", _this); };
    <%- end -%>
<%   end -%>
<%  c.vars.each do |v| -%>
<%    next if @methss.include? v[:name].to_s %>
<%    if v[:access] == :accessor or v[:access] == :reader -%>
    PUBLIC FUNCTION("", "<%= v[:name] -%>") FUNC_GETVAR("__<%= v[:name] -%>");
<%    end -%>
<%    if v[:access] == :accessor or v[:access] == :writer -%>
    PUBLIC FUNCTION("any", "<%= v[:name] -%>=") { MEMBER("__<%= v[:name] -%>", _this); };
    PUBLIC FUNCTION("any", "set_<%= v[:name] -%>") { MEMBER("__<%= v[:name] -%>", _this); }
<%    end -%>
<%  end -%>
    PUBLIC FUNCTION("","deconstructor") {
        <%- c.vars.each do |v| -%>
        DELETE_VARIABLE("__<%= v[:name] -%>");
        <%- end -%>
    };
ENDCLASS;
<% end %>
